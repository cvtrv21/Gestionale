// <auto-generated />
using System;
using Biciclotti.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Biciclotti.Data.Migrations
{
    [DbContext(typeof(DbEntities))]
    partial class DbEntitiesModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Biciclotti.Models.Bicycle", b =>
                {
                    b.Property<int>("BicycleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BicycleId"));

                    b.Property<int>("CodiceFornitore")
                        .HasColumnType("int");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Modello")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<float>("PrezzoAcquisto")
                        .HasColumnType("real");

                    b.Property<float>("PrezzoVendita")
                        .HasColumnType("real");

                    b.HasKey("BicycleId");

                    b.HasIndex("Marca", "Modello")
                        .IsUnique();

                    b.ToTable("Bicycle");
                });

            modelBuilder.Entity("Biciclotti.Models.Cliente", b =>
                {
                    b.Property<int>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCliente"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Indirizzo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeCliente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdCliente");

                    b.ToTable("Clienti");
                });

            modelBuilder.Entity("Biciclotti.Models.Order", b =>
                {
                    b.Property<int>("CodiceOrdine")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodiceOrdine"));

                    b.Property<string>("DataConsegna")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeCliente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatoOrdine")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CodiceOrdine");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Biciclotti.Models.OrderRow", b =>
                {
                    b.Property<int>("OrderRowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderRowId"));

                    b.Property<int>("BicycleId")
                        .HasColumnType("int");

                    b.Property<int>("CodiceOrdine")
                        .HasColumnType("int");

                    b.Property<int?>("OrderCodiceOrdine")
                        .HasColumnType("int");

                    b.Property<int>("Quantita")
                        .HasColumnType("int");

                    b.Property<int>("Taglia")
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    b.HasKey("OrderRowId");

                    b.HasIndex("BicycleId");

                    b.HasIndex("CodiceOrdine");

                    b.HasIndex("OrderCodiceOrdine");

                    b.ToTable("OrderRows");
                });

            modelBuilder.Entity("Biciclotti.Models.Stock", b =>
                {
                    b.Property<int>("StockId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StockId"));

                    b.Property<int>("BicycleId")
                        .HasColumnType("int");

                    b.Property<int?>("BicycleId1")
                        .HasColumnType("int");

                    b.Property<int>("Quantita")
                        .HasColumnType("int");

                    b.Property<int>("Taglia")
                        .HasColumnType("int");

                    b.HasKey("StockId");

                    b.HasIndex("BicycleId1");

                    b.HasIndex("BicycleId", "Taglia")
                        .IsUnique();

                    b.ToTable("Stocks");
                });

            modelBuilder.Entity("Biciclotti.Models.OrderRow", b =>
                {
                    b.HasOne("Biciclotti.Models.Bicycle", "Bicycle")
                        .WithMany()
                        .HasForeignKey("BicycleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Biciclotti.Models.Order", "order")
                        .WithMany()
                        .HasForeignKey("CodiceOrdine")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Biciclotti.Models.Order", null)
                        .WithMany("OrderRow")
                        .HasForeignKey("OrderCodiceOrdine");

                    b.Navigation("Bicycle");

                    b.Navigation("order");
                });

            modelBuilder.Entity("Biciclotti.Models.Stock", b =>
                {
                    b.HasOne("Biciclotti.Models.Bicycle", "Bicycle")
                        .WithMany()
                        .HasForeignKey("BicycleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Biciclotti.Models.Bicycle", null)
                        .WithMany("Stocks")
                        .HasForeignKey("BicycleId1");

                    b.Navigation("Bicycle");
                });

            modelBuilder.Entity("Biciclotti.Models.Bicycle", b =>
                {
                    b.Navigation("Stocks");
                });

            modelBuilder.Entity("Biciclotti.Models.Order", b =>
                {
                    b.Navigation("OrderRow");
                });
#pragma warning restore 612, 618
        }
    }
}
